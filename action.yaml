name: "Kind Cluster with internal container registry"
description: "Create a kind (Kubernetes IN Docker) cluster with an internal container registry"
author: "bakito"
inputs:
  kind_version:
    description: 'The version of kind to use'
    required: false
    # renovate: github-releases kubernetes-sigs/kind
    default: 'v0.29.0'
  kubectl_version:
    description: 'The version of kubectl to use'
    required: false
    # renovate: custom.k8s kubectl
    default: 'v1.33.2'
  node_image:
    description: 'The version of node image to use'
    required: false
    # renovate: docker
    default: 'kindest/node:v1.33.1'
  ingress_enabled:
    description: 'enable ingress-nginx for the cluster'
    required: false
    default: false
  ingress_version:
    description: 'The ingress-nginx controller version (git tag)'
    required: false
    # renovate: helm ingress-nginx https://kubernetes.github.io/ingress-nginx
    default: 4.12.3
  cilium_enabled:
    description: 'enable cilium ingress for the cluster'
    required: false
    default: false
  cilium_version:
    description: 'The cilium ingress controller version (git tag)'
    required: false
    default: 1.17.5
  registry_image:
    description: 'The registry docker image to be used'
    required: false
    # renovate: docker
    default: 'registry:3'
outputs:
  ingress_class_name:
    description: 'The name of the ingress class'
    value: ${{ steps.detect-ingress-class.outputs.ingress_class }}
  registry:
    description: 'The address of the docker registry'
    value: 'localhost:5001'
runs:
  using: "composite"
  steps:
    - name: Check Config
      if: ${{ inputs.ingress_enabled == 'true' && inputs.cilium_enabled == 'true' }}
      shell: bash
      run: |
        echo "::error::Conflicting ingress configurations detected - only one ingress can be enabled"
        exit 1

    - name: Install Helm
      uses: azure/setup-helm@v4.3.0
      with:
        version: 'latest'

    - name: Install jq
      uses: dcarbone/install-jq-action@v3.2.0

    - name: Install yq
      uses: dcarbone/install-yq-action@v1.3.1

    - name: Install Chainsaw
      uses: kyverno/action-install-chainsaw@v0.2.12

    - name: Set up Registry Container
      shell: bash
      run: |
        docker run -d --restart=always -p "127.0.0.1:5001:5000" --name kind-registry ${{ inputs.registry_image }}

    - name: Create kind cluster
      uses: helm/kind-action@v1.12.0
      with:
        version: ${{ inputs.kind_version }}
        kubectl_version: ${{ inputs.kubectl_version }}
        node_image: ${{ inputs.node_image }}
        config: ${{ github.action_path }}/${{ inputs.cilium_enabled == 'true' && 'ingress/cilium/kind-config.yaml' || inputs.ingress_enabled == 'true' && 'ingress/ingress-nginx/kind-config.yaml' || 'kind-config.yaml' }}

    - name: Set up Local Registry
      shell: bash
      run: |
        # https://kind.sigs.k8s.io/docs/user/local-registry/
        docker network connect kind kind-registry
        kubectl apply -f ${{ github.action_path }}/configmap-registry.yaml

    - name: Set up ingress-nginx Ingress Controller
      if: ${{ inputs.ingress_enabled == 'true' }}
      shell: bash
      run: ./ingress/ingress-nginx/install.sh ${{ inputs.ingress_version }}

    - name: Install Cilium CLI
      uses: cilium/cilium-cli@v0.18.4
      if: ${{ inputs.cilium_enabled == 'true' }}
      with:
        release-version: v0.18.4

    - name: Set up cilium Ingress Controller
      if: ${{ inputs.cilium_enabled == 'true' }}
      shell: bash
      run: ./ingress/cilium/install.sh ${{ inputs.cilium_version }}

    - name: Detect IngressClass
      id: detect-ingress-class
      shell: bash
      run: |
        INGRESS_CLASS=$(kubectl get ingressclass -o jsonpath='{.items[*].metadata.name}')
        echo "ingress_class=$INGRESS_CLASS" >> "$GITHUB_OUTPUT"
