name: "Kind Cluster with internal container registry"
description: "Create a kind (Kubernetes IN Docker) cluster with an internal container registry"
author: "bakito"
inputs:
  kind_version:
    description: 'The version of kind to use'
    required: false
    # renovate: github-releases kubernetes-sigs/kind
    default: 'v0.26.0'
  kubectl_version:
    description: 'The version of kubectl to use'
    required: false
    # renovate: custom.k8s kubectl
    default: 'v1.31.0'
  node_image:
    description: 'The version of node image to use'
    required: false
    # renovate: docker
    default: 'kindest/node:v1.32.2'
  ingress_enabled:
    description: 'enable ingress for the cluster'
    required: false
    default: false
  ingress_version:
    description: 'The ingress controller version (git tag)'
    required: false
    default: helm-chart-4.11.3
  registry_image:
    description: 'The registry docker image to be used'
    required: false
    # renovate: docker
    default: 'registry:2'
outputs:
  ingress_class_name:
    description: 'The name of the ingress class'
    value: 'nginx'
  registry:
    description: 'The address of the docker registry'
    value: 'localhost:5001'
runs:
  using: "composite"
  steps:
    - name: Install Helm
      uses: azure/setup-helm@v4.2.0

    - name: Install jq
      uses: dcarbone/install-jq-action@v3.0.1

    - name: Install yq
      uses: dcarbone/install-yq-action@v1.3.1
      
    - name: Install Chainsaw
      uses: kyverno/action-install-chainsaw@v0.2.12
      
    - name: Set up Registry Container
      shell: bash
      run: |
        docker run -d --restart=always -p "127.0.0.1:5001:5000" --name kind-registry ${{ inputs.registry_image }}

    - name: Create kind cluster
      uses: helm/kind-action@v1.12.0
      with:
        version: ${{ inputs.kind_version }}
        kubectl_version: ${{ inputs.kubectl_version }}
        node_image: ${{ inputs.node_image }}
        config: ${{ github.action_path }}/kind-config.yaml

    - name: Set up Local Registry
      shell: bash
      run: |
        # https://kind.sigs.k8s.io/docs/user/local-registry/
        docker network connect kind kind-registry
        kubectl apply -f ${{ github.action_path }}/configmap-registry.yaml

    - name: Set up Ingress
      if: ${{ inputs.ingress_enabled == 'true' }}
      shell: bash
      run: |
        # https://kind.sigs.k8s.io/docs/user/ingress/
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/${{ inputs.ingress_version }}/deploy/static/provider/kind/deploy.yaml
        kubectl wait --namespace ingress-nginx \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/component=controller \
          --timeout=90s
